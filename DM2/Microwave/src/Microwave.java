/** Generated by itemis CREATE code generator. */

import com.yakindu.core.IEventDriven;
import com.yakindu.core.IStatemachine;
import com.yakindu.core.ITimed;
import com.yakindu.core.ITimerService;
import java.util.LinkedList;
import java.util.Queue;

public class Microwave implements ITimed, IEventDriven {
	public enum State {
		MICROWAVE_SYSTEM,
		MICROWAVE_SYSTEM_SETTINGPOWER_HIGH,
		MICROWAVE_SYSTEM_SETTINGPOWER_LOW,
		MICROWAVE_SYSTEM_TIMERSETTING_TIMER,
		MICROWAVE_SYSTEM_TIMERSETTING_TIMER_R1_FOURTHDIGIT,
		MICROWAVE_SYSTEM_TIMERSETTING_TIMER_R1_THIRDDIGIT,
		MICROWAVE_SYSTEM_TIMERSETTING_TIMER_R1_SECONDDIGIT,
		MICROWAVE_SYSTEM_TIMERSETTING_TIMER_R1_FIRSTDIGIT,
		MICROWAVE_SYSTEM_TIMERSETTING_TIMER_R1_INITIALTIME,
		MICROWAVE_SYSTEM_DOOR_DOOROPEN,
		MICROWAVE_SYSTEM_DOOR_DOORCLOSE,
		MICROWAVE_SYSTEM_COOKING_RUNNING,
		MICROWAVE_SYSTEM_COOKING_RUNNING_R1_COOKING,
		MICROWAVE_SYSTEM_COOKING_RUNNING_R2_COUNTDOWN,
		MICROWAVE_SYSTEM_COOKING_FINISHSTATE,
		MICROWAVE_SYSTEM_COOKING_FINISHSTATE_R1_FINISHED,
		MICROWAVE_SYSTEM_COOKING_FINISHSTATE_R2_FINISHSOUNDON,
		MICROWAVE_SYSTEM_COOKING_FINISHSTATE_R2_FINISHSOUNDOFF,
		MICROWAVE_SYSTEM_COOKING_WAITING,
		MICROWAVE_SYSTEM_COOKING_STOPSTATE,
		MICROWAVE_SYSTEM_COOKING__FINAL_,
		MICROWAVE_SYSTEM_COOKING_INITIALCOOKINGSTATE,
		$NULLSTATE$
	};
	
	private final State[] stateVector = new State[5];
	
	private ITimerService timerService;
	
	private final boolean[] timeEvents = new boolean[2];
	
	private Queue<Runnable> inEventQueue = new LinkedList<Runnable>();
	private long setTime;
	
	protected long getSetTime() {
		return setTime;
	}
	
	protected void setSetTime(long value) {
		this.setTime = value;
	}
	
	
	private boolean isDoorClosed;
	
	protected boolean getIsDoorClosed() {
		return isDoorClosed;
	}
	
	protected void setIsDoorClosed(boolean value) {
		this.isDoorClosed = value;
	}
	
	
	private boolean completed;
	
	protected boolean getCompleted() {
		return completed;
	}
	
	protected void setCompleted(boolean value) {
		this.completed = value;
	}
	private boolean doCompletion;
	
	protected boolean getDoCompletion() {
		return doCompletion;
	}
	
	protected void setDoCompletion(boolean value) {
		this.doCompletion = value;
	}
	private boolean isExecuting;
	
	protected boolean getIsExecuting() {
		return isExecuting;
	}
	
	protected void setIsExecuting(boolean value) {
		this.isExecuting = value;
	}
	private long stateConfVectorPosition;
	
	protected long getStateConfVectorPosition() {
		return stateConfVectorPosition;
	}
	
	protected void setStateConfVectorPosition(long value) {
		this.stateConfVectorPosition = value;
	}
	public Microwave() {
		for (int i = 0; i < 5; i++) {
			stateVector[i] = State.$NULLSTATE$;
		}
		
		clearInEvents();
		
		/* Default init sequence for statechart microwave */
		setPower(0l);
		setSetTime(0l);
		setIsDoorClosed(false);
		
		isExecuting = false;
	}
	
	public void enter() {
		/* Activates the state machine. */
		if (timerService == null) {
			throw new IllegalStateException("Timer service must be set.");
		}
		if (this.operationCallback == null) {
			throw new IllegalStateException("Operation callback must be set.");
		}
		
		if (getIsExecuting()) {
			return;
		}
		isExecuting = true;
		/* Default enter sequence for statechart microwave */
		enterSequence_Microwave_default();
		doCompletion = false;
		do { 
			if (getCompleted()) {
				doCompletion = true;
			}
			completed = false;
			microStep();
			doCompletion = false;
		} while (getCompleted());
		isExecuting = false;
	}
	
	public void exit() {
		/* Deactivates the state machine. */
		if (getIsExecuting()) {
			return;
		}
		isExecuting = true;
		/* Default exit sequence for statechart microwave */
		exitSequence_Microwave();
		isExecuting = false;
	}
	
	/**
	 * @see IStatemachine#isActive()
	 */
	public boolean isActive() {
		return stateVector[0] != State.$NULLSTATE$||stateVector[1] != State.$NULLSTATE$||stateVector[2] != State.$NULLSTATE$||stateVector[3] != State.$NULLSTATE$||stateVector[4] != State.$NULLSTATE$;
	}
	
	/** 
	* Always returns 'false' since this state machine can never become final.
	*
	* @see IStatemachine#isFinal()
	*/
	public boolean isFinal() {
		return false;
	}
	private void clearInEvents() {
		high = false;
		low = false;
		digit = false;
		timer = false;
		start = false;
		stop = false;
		open = false;
		close = false;
		timeEvents[0] = false;
		timeEvents[1] = false;
	}
	
	private void microStep() {
		long transitioned = -1l;
		stateConfVectorPosition = 0l;
		switch (stateVector[0]) {
		case MICROWAVE_SYSTEM_SETTINGPOWER_HIGH:
			transitioned = microwave_System_SettingPower_High_react(transitioned);
			break;
		case MICROWAVE_SYSTEM_SETTINGPOWER_LOW:
			transitioned = microwave_System_SettingPower_Low_react(transitioned);
			break;
		default:
			break;
		}
		if (getStateConfVectorPosition()<1l) {
			switch (stateVector[1]) {
			case MICROWAVE_SYSTEM_TIMERSETTING_TIMER_R1_FOURTHDIGIT:
				transitioned = microwave_System_TimerSetting_Timer_r1_fourthDigit_react(transitioned);
				break;
			case MICROWAVE_SYSTEM_TIMERSETTING_TIMER_R1_THIRDDIGIT:
				transitioned = microwave_System_TimerSetting_Timer_r1_thirdDigit_react(transitioned);
				break;
			case MICROWAVE_SYSTEM_TIMERSETTING_TIMER_R1_SECONDDIGIT:
				transitioned = microwave_System_TimerSetting_Timer_r1_secondDigit_react(transitioned);
				break;
			case MICROWAVE_SYSTEM_TIMERSETTING_TIMER_R1_FIRSTDIGIT:
				transitioned = microwave_System_TimerSetting_Timer_r1_firstDigit_react(transitioned);
				break;
			case MICROWAVE_SYSTEM_TIMERSETTING_TIMER_R1_INITIALTIME:
				transitioned = microwave_System_TimerSetting_Timer_r1_InitialTime_react(transitioned);
				break;
			default:
				break;
			}
		}
		if (getStateConfVectorPosition()<2l) {
			switch (stateVector[2]) {
			case MICROWAVE_SYSTEM_DOOR_DOOROPEN:
				transitioned = microwave_System_Door_DoorOpen_react(transitioned);
				break;
			case MICROWAVE_SYSTEM_DOOR_DOORCLOSE:
				transitioned = microwave_System_Door_DoorClose_react(transitioned);
				break;
			default:
				break;
			}
		}
		if (getStateConfVectorPosition()<3l) {
			switch (stateVector[3]) {
			case MICROWAVE_SYSTEM_COOKING_RUNNING_R1_COOKING:
				transitioned = microwave_System_Cooking_Running_r1_Cooking_react(transitioned);
				break;
			case MICROWAVE_SYSTEM_COOKING_FINISHSTATE_R1_FINISHED:
				transitioned = microwave_System_Cooking_FinishState_r1_Finished_react(transitioned);
				break;
			case MICROWAVE_SYSTEM_COOKING_WAITING:
				transitioned = microwave_System_Cooking_Waiting_react(transitioned);
				break;
			case MICROWAVE_SYSTEM_COOKING_STOPSTATE:
				transitioned = microwave_System_Cooking_StopState_react(transitioned);
				break;
			case MICROWAVE_SYSTEM_COOKING__FINAL_:
				transitioned = microwave_System_Cooking__final__react(transitioned);
				break;
			case MICROWAVE_SYSTEM_COOKING_INITIALCOOKINGSTATE:
				transitioned = microwave_System_Cooking_InitialCookingState_react(transitioned);
				break;
			default:
				break;
			}
		}
		if (getStateConfVectorPosition()<4l) {
			switch (stateVector[4]) {
			case MICROWAVE_SYSTEM_COOKING_RUNNING_R2_COUNTDOWN:
				microwave_System_Cooking_Running_r2_CountDown_react(transitioned);
				break;
			case MICROWAVE_SYSTEM_COOKING_FINISHSTATE_R2_FINISHSOUNDON:
				microwave_System_Cooking_FinishState_r2_FinishSoundOn_react(transitioned);
				break;
			case MICROWAVE_SYSTEM_COOKING_FINISHSTATE_R2_FINISHSOUNDOFF:
				microwave_System_Cooking_FinishState_r2_FinishSoundOff_react(transitioned);
				break;
			default:
				break;
			}
		}
	}
	
	private void runCycle() {
		/* Performs a 'run to completion' step. */
		if (timerService == null) {
			throw new IllegalStateException("Timer service must be set.");
		}
		if (this.operationCallback == null) {
			throw new IllegalStateException("Operation callback must be set.");
		}
		
		if (getIsExecuting()) {
			return;
		}
		isExecuting = true;
		nextEvent();
		do { 
			doCompletion = false;
			do { 
				if (getCompleted()) {
					doCompletion = true;
				}
				completed = false;
				microStep();
				doCompletion = false;
			} while (getCompleted());
			clearInEvents();
		} while (nextEvent());
		isExecuting = false;
	}
	
	protected boolean nextEvent() {
		if(!inEventQueue.isEmpty()) {
			inEventQueue.poll().run();
			return true;
		}
		return false;
	}
	/**
	* Returns true if the given state is currently active otherwise false.
	*/
	public boolean isStateActive(State state) {
	
		switch (state) {
		case MICROWAVE_SYSTEM:
			return stateVector[0].ordinal() >= State.
					MICROWAVE_SYSTEM.ordinal()&& stateVector[0].ordinal() <= State.MICROWAVE_SYSTEM_COOKING_INITIALCOOKINGSTATE.ordinal();
		case MICROWAVE_SYSTEM_SETTINGPOWER_HIGH:
			return stateVector[0] == State.MICROWAVE_SYSTEM_SETTINGPOWER_HIGH;
		case MICROWAVE_SYSTEM_SETTINGPOWER_LOW:
			return stateVector[0] == State.MICROWAVE_SYSTEM_SETTINGPOWER_LOW;
		case MICROWAVE_SYSTEM_TIMERSETTING_TIMER:
			return stateVector[1].ordinal() >= State.
					MICROWAVE_SYSTEM_TIMERSETTING_TIMER.ordinal()&& stateVector[1].ordinal() <= State.MICROWAVE_SYSTEM_TIMERSETTING_TIMER_R1_INITIALTIME.ordinal();
		case MICROWAVE_SYSTEM_TIMERSETTING_TIMER_R1_FOURTHDIGIT:
			return stateVector[1] == State.MICROWAVE_SYSTEM_TIMERSETTING_TIMER_R1_FOURTHDIGIT;
		case MICROWAVE_SYSTEM_TIMERSETTING_TIMER_R1_THIRDDIGIT:
			return stateVector[1] == State.MICROWAVE_SYSTEM_TIMERSETTING_TIMER_R1_THIRDDIGIT;
		case MICROWAVE_SYSTEM_TIMERSETTING_TIMER_R1_SECONDDIGIT:
			return stateVector[1] == State.MICROWAVE_SYSTEM_TIMERSETTING_TIMER_R1_SECONDDIGIT;
		case MICROWAVE_SYSTEM_TIMERSETTING_TIMER_R1_FIRSTDIGIT:
			return stateVector[1] == State.MICROWAVE_SYSTEM_TIMERSETTING_TIMER_R1_FIRSTDIGIT;
		case MICROWAVE_SYSTEM_TIMERSETTING_TIMER_R1_INITIALTIME:
			return stateVector[1] == State.MICROWAVE_SYSTEM_TIMERSETTING_TIMER_R1_INITIALTIME;
		case MICROWAVE_SYSTEM_DOOR_DOOROPEN:
			return stateVector[2] == State.MICROWAVE_SYSTEM_DOOR_DOOROPEN;
		case MICROWAVE_SYSTEM_DOOR_DOORCLOSE:
			return stateVector[2] == State.MICROWAVE_SYSTEM_DOOR_DOORCLOSE;
		case MICROWAVE_SYSTEM_COOKING_RUNNING:
			return stateVector[3].ordinal() >= State.
					MICROWAVE_SYSTEM_COOKING_RUNNING.ordinal()&& stateVector[3].ordinal() <= State.MICROWAVE_SYSTEM_COOKING_RUNNING_R2_COUNTDOWN.ordinal();
		case MICROWAVE_SYSTEM_COOKING_RUNNING_R1_COOKING:
			return stateVector[3] == State.MICROWAVE_SYSTEM_COOKING_RUNNING_R1_COOKING;
		case MICROWAVE_SYSTEM_COOKING_RUNNING_R2_COUNTDOWN:
			return stateVector[4] == State.MICROWAVE_SYSTEM_COOKING_RUNNING_R2_COUNTDOWN;
		case MICROWAVE_SYSTEM_COOKING_FINISHSTATE:
			return stateVector[3].ordinal() >= State.
					MICROWAVE_SYSTEM_COOKING_FINISHSTATE.ordinal()&& stateVector[3].ordinal() <= State.MICROWAVE_SYSTEM_COOKING_FINISHSTATE_R2_FINISHSOUNDOFF.ordinal();
		case MICROWAVE_SYSTEM_COOKING_FINISHSTATE_R1_FINISHED:
			return stateVector[3] == State.MICROWAVE_SYSTEM_COOKING_FINISHSTATE_R1_FINISHED;
		case MICROWAVE_SYSTEM_COOKING_FINISHSTATE_R2_FINISHSOUNDON:
			return stateVector[4] == State.MICROWAVE_SYSTEM_COOKING_FINISHSTATE_R2_FINISHSOUNDON;
		case MICROWAVE_SYSTEM_COOKING_FINISHSTATE_R2_FINISHSOUNDOFF:
			return stateVector[4] == State.MICROWAVE_SYSTEM_COOKING_FINISHSTATE_R2_FINISHSOUNDOFF;
		case MICROWAVE_SYSTEM_COOKING_WAITING:
			return stateVector[3] == State.MICROWAVE_SYSTEM_COOKING_WAITING;
		case MICROWAVE_SYSTEM_COOKING_STOPSTATE:
			return stateVector[3] == State.MICROWAVE_SYSTEM_COOKING_STOPSTATE;
		case MICROWAVE_SYSTEM_COOKING__FINAL_:
			return stateVector[3] == State.MICROWAVE_SYSTEM_COOKING__FINAL_;
		case MICROWAVE_SYSTEM_COOKING_INITIALCOOKINGSTATE:
			return stateVector[3] == State.MICROWAVE_SYSTEM_COOKING_INITIALCOOKINGSTATE;
		default:
			return false;
		}
	}
	
	public void setTimerService(ITimerService timerService) {
		this.timerService = timerService;
	}
	
	public ITimerService getTimerService() {
		return timerService;
	}
	
	public void raiseTimeEvent(int eventID) {
		inEventQueue.add(() -> {
			timeEvents[eventID] = true;
		});
		runCycle();
	}
	
	
	public interface OperationCallback {
	
		public void displayTime(long t);
		
		public void display(String msg);
		
		public void clearDisplay();
		
		public void cook();
		
		public void stopCook();
		
		public void beepOn();
		
		public void beepOff();
		
		public void closeDoor();
		
		public void openDoor();
		
	}
	
	private OperationCallback operationCallback;
	
	public void setOperationCallback(OperationCallback operationCallback) {
		this.operationCallback = operationCallback;
	}
	
	private boolean high;
	
	
	public void raiseHigh() {
		inEventQueue.add(() -> {
			high = true;
		});
		runCycle();
	}
	
	private boolean low;
	
	
	public void raiseLow() {
		inEventQueue.add(() -> {
			low = true;
		});
		runCycle();
	}
	
	private boolean digit;
	
	private long digitValue;
	
	
	public void raiseDigit(final long value) {
		inEventQueue.add(() -> {
			digitValue = value;
			digit = true;
		});
		runCycle();
	}
	protected long getDigitValue() {
		if (! digit ) 
			throw new IllegalStateException("Illegal event value access. Event Digit is not raised!");
		return digitValue;
	}
	
	private boolean timer;
	
	
	public void raiseTimer() {
		inEventQueue.add(() -> {
			timer = true;
		});
		runCycle();
	}
	
	private boolean start;
	
	
	public void raiseStart() {
		inEventQueue.add(() -> {
			start = true;
		});
		runCycle();
	}
	
	private boolean stop;
	
	
	public void raiseStop() {
		inEventQueue.add(() -> {
			stop = true;
		});
		runCycle();
	}
	
	private boolean open;
	
	
	public void raiseOpen() {
		inEventQueue.add(() -> {
			open = true;
		});
		runCycle();
	}
	
	private boolean close;
	
	
	public void raiseClose() {
		inEventQueue.add(() -> {
			close = true;
		});
		runCycle();
	}
	
	private long power;
	
	public long getPower() {
		return power;
	}
	
	public void setPower(long value) {
		this.power = value;
	}
	
	/* Entry action for state 'High'. */
	private void entryAction_Microwave_System_SettingPower_High() {
		/* Entry action for state 'High'. */
		operationCallback.display("High");
		setPower(1l);
	}
	
	/* Entry action for state 'Low'. */
	private void entryAction_Microwave_System_SettingPower_Low() {
		/* Entry action for state 'Low'. */
		operationCallback.display("Low");
		setPower(2l);
	}
	
	/* Entry action for state 'Timer'. */
	private void entryAction_Microwave_System_TimerSetting_Timer() {
		/* Entry action for state 'Timer'. */
		setSetTime(0l);
	}
	
	/* Entry action for state 'fourthDigit'. */
	private void entryAction_Microwave_System_TimerSetting_Timer_r1_fourthDigit() {
		/* Entry action for state 'fourthDigit'. */
		setSetTime(((setTime * 10l) + getDigitValue()));
		operationCallback.displayTime(getSetTime());
	}
	
	/* Entry action for state 'thirdDigit'. */
	private void entryAction_Microwave_System_TimerSetting_Timer_r1_thirdDigit() {
		/* Entry action for state 'thirdDigit'. */
		setSetTime(((setTime * 10l) + getDigitValue()));
		operationCallback.displayTime(getSetTime());
	}
	
	/* Entry action for state 'secondDigit'. */
	private void entryAction_Microwave_System_TimerSetting_Timer_r1_secondDigit() {
		/* Entry action for state 'secondDigit'. */
		setSetTime(((setTime * 10l) + getDigitValue()));
		operationCallback.displayTime(getSetTime());
	}
	
	/* Entry action for state 'firstDigit'. */
	private void entryAction_Microwave_System_TimerSetting_Timer_r1_firstDigit() {
		/* Entry action for state 'firstDigit'. */
		setSetTime(getDigitValue());
		operationCallback.displayTime(getSetTime());
	}
	
	/* Entry action for state 'InitialTime'. */
	private void entryAction_Microwave_System_TimerSetting_Timer_r1_InitialTime() {
		/* Entry action for state 'InitialTime'. */
		operationCallback.displayTime(getSetTime());
	}
	
	/* Entry action for state 'DoorOpen'. */
	private void entryAction_Microwave_System_Door_DoorOpen() {
		/* Entry action for state 'DoorOpen'. */
		operationCallback.openDoor();
		setIsDoorClosed(false);
	}
	
	/* Entry action for state 'DoorClose'. */
	private void entryAction_Microwave_System_Door_DoorClose() {
		/* Entry action for state 'DoorClose'. */
		operationCallback.closeDoor();
		setIsDoorClosed(true);
	}
	
	/* Entry action for state 'Cooking'. */
	private void entryAction_Microwave_System_Cooking_Running_r1_Cooking() {
		/* Entry action for state 'Cooking'. */
		operationCallback.cook();
	}
	
	/* Entry action for state 'CountDown'. */
	private void entryAction_Microwave_System_Cooking_Running_r2_CountDown() {
		/* Entry action for state 'CountDown'. */
		timerService.setTimer(this, 0, (1l * 1000l), false);
		operationCallback.displayTime(getSetTime());
		setSetTime(getSetTime() - 1l);
	}
	
	/* Entry action for state 'Finished'. */
	private void entryAction_Microwave_System_Cooking_FinishState_r1_Finished() {
		/* Entry action for state 'Finished'. */
		operationCallback.display("Finished");
	}
	
	/* Entry action for state 'FinishSoundOn'. */
	private void entryAction_Microwave_System_Cooking_FinishState_r2_FinishSoundOn() {
		/* Entry action for state 'FinishSoundOn'. */
		timerService.setTimer(this, 1, (5l * 1000l), false);
		operationCallback.beepOn();
	}
	
	private void entryAction_Microwave_System_Cooking_FinishState_r2_FinishSoundOff() {
		/* Entry action for state 'FinishSoundOff'. */
		operationCallback.beepOff();
		completed = true;
	}
	
	/* Entry action for state 'Waiting'. */
	private void entryAction_Microwave_System_Cooking_Waiting() {
		/* Entry action for state 'Waiting'. */
		operationCallback.display("Waiting");
	}
	
	private void entryAction_Microwave_System_Cooking_StopState() {
		/* Entry action for state 'StopState'. */
		operationCallback.clearDisplay();
		operationCallback.stopCook();
		completed = true;
	}
	
	/* Exit action for state 'CountDown'. */
	private void exitAction_Microwave_System_Cooking_Running_r2_CountDown() {
		/* Exit action for state 'CountDown'. */
		timerService.unsetTimer(this, 0);
	}
	
	/* Exit action for state 'FinishSoundOn'. */
	private void exitAction_Microwave_System_Cooking_FinishState_r2_FinishSoundOn() {
		/* Exit action for state 'FinishSoundOn'. */
		timerService.unsetTimer(this, 1);
	}
	
	/* 'default' enter sequence for state System */
	private void enterSequence_Microwave_System_default() {
		/* 'default' enter sequence for state System */
		enterSequence_Microwave_System_SettingPower_default();
		enterSequence_Microwave_System_TimerSetting_default();
		enterSequence_Microwave_System_Door_default();
		enterSequence_Microwave_System_Cooking_default();
	}
	
	/* 'default' enter sequence for state High */
	private void enterSequence_Microwave_System_SettingPower_High_default() {
		/* 'default' enter sequence for state High */
		entryAction_Microwave_System_SettingPower_High();
		stateVector[0] = State.MICROWAVE_SYSTEM_SETTINGPOWER_HIGH;
		stateConfVectorPosition = 0;
	}
	
	/* 'default' enter sequence for state Low */
	private void enterSequence_Microwave_System_SettingPower_Low_default() {
		/* 'default' enter sequence for state Low */
		entryAction_Microwave_System_SettingPower_Low();
		stateVector[0] = State.MICROWAVE_SYSTEM_SETTINGPOWER_LOW;
		stateConfVectorPosition = 0;
	}
	
	/* 'default' enter sequence for state Timer */
	private void enterSequence_Microwave_System_TimerSetting_Timer_default() {
		/* 'default' enter sequence for state Timer */
		entryAction_Microwave_System_TimerSetting_Timer();
		enterSequence_Microwave_System_TimerSetting_Timer_r1_default();
	}
	
	/* 'default' enter sequence for state fourthDigit */
	private void enterSequence_Microwave_System_TimerSetting_Timer_r1_fourthDigit_default() {
		/* 'default' enter sequence for state fourthDigit */
		entryAction_Microwave_System_TimerSetting_Timer_r1_fourthDigit();
		stateVector[1] = State.MICROWAVE_SYSTEM_TIMERSETTING_TIMER_R1_FOURTHDIGIT;
		stateConfVectorPosition = 1;
	}
	
	/* 'default' enter sequence for state thirdDigit */
	private void enterSequence_Microwave_System_TimerSetting_Timer_r1_thirdDigit_default() {
		/* 'default' enter sequence for state thirdDigit */
		entryAction_Microwave_System_TimerSetting_Timer_r1_thirdDigit();
		stateVector[1] = State.MICROWAVE_SYSTEM_TIMERSETTING_TIMER_R1_THIRDDIGIT;
		stateConfVectorPosition = 1;
	}
	
	/* 'default' enter sequence for state secondDigit */
	private void enterSequence_Microwave_System_TimerSetting_Timer_r1_secondDigit_default() {
		/* 'default' enter sequence for state secondDigit */
		entryAction_Microwave_System_TimerSetting_Timer_r1_secondDigit();
		stateVector[1] = State.MICROWAVE_SYSTEM_TIMERSETTING_TIMER_R1_SECONDDIGIT;
		stateConfVectorPosition = 1;
	}
	
	/* 'default' enter sequence for state firstDigit */
	private void enterSequence_Microwave_System_TimerSetting_Timer_r1_firstDigit_default() {
		/* 'default' enter sequence for state firstDigit */
		entryAction_Microwave_System_TimerSetting_Timer_r1_firstDigit();
		stateVector[1] = State.MICROWAVE_SYSTEM_TIMERSETTING_TIMER_R1_FIRSTDIGIT;
		stateConfVectorPosition = 1;
	}
	
	/* 'default' enter sequence for state InitialTime */
	private void enterSequence_Microwave_System_TimerSetting_Timer_r1_InitialTime_default() {
		/* 'default' enter sequence for state InitialTime */
		entryAction_Microwave_System_TimerSetting_Timer_r1_InitialTime();
		stateVector[1] = State.MICROWAVE_SYSTEM_TIMERSETTING_TIMER_R1_INITIALTIME;
		stateConfVectorPosition = 1;
	}
	
	/* 'default' enter sequence for state DoorOpen */
	private void enterSequence_Microwave_System_Door_DoorOpen_default() {
		/* 'default' enter sequence for state DoorOpen */
		entryAction_Microwave_System_Door_DoorOpen();
		stateVector[2] = State.MICROWAVE_SYSTEM_DOOR_DOOROPEN;
		stateConfVectorPosition = 2;
	}
	
	/* 'default' enter sequence for state DoorClose */
	private void enterSequence_Microwave_System_Door_DoorClose_default() {
		/* 'default' enter sequence for state DoorClose */
		entryAction_Microwave_System_Door_DoorClose();
		stateVector[2] = State.MICROWAVE_SYSTEM_DOOR_DOORCLOSE;
		stateConfVectorPosition = 2;
	}
	
	/* 'default' enter sequence for state Running */
	private void enterSequence_Microwave_System_Cooking_Running_default() {
		/* 'default' enter sequence for state Running */
		enterSequence_Microwave_System_Cooking_Running_r1_default();
		enterSequence_Microwave_System_Cooking_Running_r2_default();
	}
	
	/* 'default' enter sequence for state Cooking */
	private void enterSequence_Microwave_System_Cooking_Running_r1_Cooking_default() {
		/* 'default' enter sequence for state Cooking */
		entryAction_Microwave_System_Cooking_Running_r1_Cooking();
		stateVector[3] = State.MICROWAVE_SYSTEM_COOKING_RUNNING_R1_COOKING;
		stateConfVectorPosition = 3;
	}
	
	/* 'default' enter sequence for state CountDown */
	private void enterSequence_Microwave_System_Cooking_Running_r2_CountDown_default() {
		/* 'default' enter sequence for state CountDown */
		entryAction_Microwave_System_Cooking_Running_r2_CountDown();
		stateVector[4] = State.MICROWAVE_SYSTEM_COOKING_RUNNING_R2_COUNTDOWN;
		stateConfVectorPosition = 4;
	}
	
	/* 'default' enter sequence for state FinishState */
	private void enterSequence_Microwave_System_Cooking_FinishState_default() {
		/* 'default' enter sequence for state FinishState */
		enterSequence_Microwave_System_Cooking_FinishState_r1_default();
		enterSequence_Microwave_System_Cooking_FinishState_r2_default();
	}
	
	/* 'default' enter sequence for state Finished */
	private void enterSequence_Microwave_System_Cooking_FinishState_r1_Finished_default() {
		/* 'default' enter sequence for state Finished */
		entryAction_Microwave_System_Cooking_FinishState_r1_Finished();
		stateVector[3] = State.MICROWAVE_SYSTEM_COOKING_FINISHSTATE_R1_FINISHED;
		stateConfVectorPosition = 3;
	}
	
	/* 'default' enter sequence for state FinishSoundOn */
	private void enterSequence_Microwave_System_Cooking_FinishState_r2_FinishSoundOn_default() {
		/* 'default' enter sequence for state FinishSoundOn */
		entryAction_Microwave_System_Cooking_FinishState_r2_FinishSoundOn();
		stateVector[4] = State.MICROWAVE_SYSTEM_COOKING_FINISHSTATE_R2_FINISHSOUNDON;
		stateConfVectorPosition = 4;
	}
	
	/* 'default' enter sequence for state FinishSoundOff */
	private void enterSequence_Microwave_System_Cooking_FinishState_r2_FinishSoundOff_default() {
		/* 'default' enter sequence for state FinishSoundOff */
		entryAction_Microwave_System_Cooking_FinishState_r2_FinishSoundOff();
		stateVector[4] = State.MICROWAVE_SYSTEM_COOKING_FINISHSTATE_R2_FINISHSOUNDOFF;
		stateConfVectorPosition = 4;
	}
	
	/* 'default' enter sequence for state Waiting */
	private void enterSequence_Microwave_System_Cooking_Waiting_default() {
		/* 'default' enter sequence for state Waiting */
		entryAction_Microwave_System_Cooking_Waiting();
		stateVector[3] = State.MICROWAVE_SYSTEM_COOKING_WAITING;
		stateConfVectorPosition = 3;
	}
	
	/* 'default' enter sequence for state StopState */
	private void enterSequence_Microwave_System_Cooking_StopState_default() {
		/* 'default' enter sequence for state StopState */
		entryAction_Microwave_System_Cooking_StopState();
		stateVector[3] = State.MICROWAVE_SYSTEM_COOKING_STOPSTATE;
		stateConfVectorPosition = 3;
	}
	
	/* 'default' enter sequence for state InitialCookingState */
	private void enterSequence_Microwave_System_Cooking_InitialCookingState_default() {
		/* 'default' enter sequence for state InitialCookingState */
		stateVector[3] = State.MICROWAVE_SYSTEM_COOKING_INITIALCOOKINGSTATE;
		stateConfVectorPosition = 3;
	}
	
	/* 'default' enter sequence for region Microwave */
	private void enterSequence_Microwave_default() {
		/* 'default' enter sequence for region Microwave */
		react_Microwave__entry_Default();
	}
	
	/* 'default' enter sequence for region SettingPower */
	private void enterSequence_Microwave_System_SettingPower_default() {
		/* 'default' enter sequence for region SettingPower */
		react_Microwave_System_SettingPower__entry_Default();
	}
	
	/* 'default' enter sequence for region TimerSetting */
	private void enterSequence_Microwave_System_TimerSetting_default() {
		/* 'default' enter sequence for region TimerSetting */
		react_Microwave_System_TimerSetting__entry_Default();
	}
	
	/* 'default' enter sequence for region r1 */
	private void enterSequence_Microwave_System_TimerSetting_Timer_r1_default() {
		/* 'default' enter sequence for region r1 */
		react_Microwave_System_TimerSetting_Timer_r1__entry_Default();
	}
	
	/* 'default' enter sequence for region Door */
	private void enterSequence_Microwave_System_Door_default() {
		/* 'default' enter sequence for region Door */
		react_Microwave_System_Door__entry_Default();
	}
	
	/* 'default' enter sequence for region Cooking */
	private void enterSequence_Microwave_System_Cooking_default() {
		/* 'default' enter sequence for region Cooking */
		react_Microwave_System_Cooking__entry_Default();
	}
	
	/* 'default' enter sequence for region r1 */
	private void enterSequence_Microwave_System_Cooking_Running_r1_default() {
		/* 'default' enter sequence for region r1 */
		react_Microwave_System_Cooking_Running_r1__entry_Default();
	}
	
	/* 'default' enter sequence for region r2 */
	private void enterSequence_Microwave_System_Cooking_Running_r2_default() {
		/* 'default' enter sequence for region r2 */
		react_Microwave_System_Cooking_Running_r2__entry_Default();
	}
	
	/* 'default' enter sequence for region r1 */
	private void enterSequence_Microwave_System_Cooking_FinishState_r1_default() {
		/* 'default' enter sequence for region r1 */
		react_Microwave_System_Cooking_FinishState_r1__entry_Default();
	}
	
	/* 'default' enter sequence for region r2 */
	private void enterSequence_Microwave_System_Cooking_FinishState_r2_default() {
		/* 'default' enter sequence for region r2 */
		react_Microwave_System_Cooking_FinishState_r2__entry_Default();
	}
	
	/* Default exit sequence for state High */
	private void exitSequence_Microwave_System_SettingPower_High() {
		/* Default exit sequence for state High */
		stateVector[0] = State.$NULLSTATE$;
		stateConfVectorPosition = 0;
	}
	
	/* Default exit sequence for state Low */
	private void exitSequence_Microwave_System_SettingPower_Low() {
		/* Default exit sequence for state Low */
		stateVector[0] = State.$NULLSTATE$;
		stateConfVectorPosition = 0;
	}
	
	/* Default exit sequence for state fourthDigit */
	private void exitSequence_Microwave_System_TimerSetting_Timer_r1_fourthDigit() {
		/* Default exit sequence for state fourthDigit */
		stateVector[1] = State.$NULLSTATE$;
		stateConfVectorPosition = 1;
	}
	
	/* Default exit sequence for state thirdDigit */
	private void exitSequence_Microwave_System_TimerSetting_Timer_r1_thirdDigit() {
		/* Default exit sequence for state thirdDigit */
		stateVector[1] = State.$NULLSTATE$;
		stateConfVectorPosition = 1;
	}
	
	/* Default exit sequence for state secondDigit */
	private void exitSequence_Microwave_System_TimerSetting_Timer_r1_secondDigit() {
		/* Default exit sequence for state secondDigit */
		stateVector[1] = State.$NULLSTATE$;
		stateConfVectorPosition = 1;
	}
	
	/* Default exit sequence for state firstDigit */
	private void exitSequence_Microwave_System_TimerSetting_Timer_r1_firstDigit() {
		/* Default exit sequence for state firstDigit */
		stateVector[1] = State.$NULLSTATE$;
		stateConfVectorPosition = 1;
	}
	
	/* Default exit sequence for state InitialTime */
	private void exitSequence_Microwave_System_TimerSetting_Timer_r1_InitialTime() {
		/* Default exit sequence for state InitialTime */
		stateVector[1] = State.$NULLSTATE$;
		stateConfVectorPosition = 1;
	}
	
	/* Default exit sequence for state DoorOpen */
	private void exitSequence_Microwave_System_Door_DoorOpen() {
		/* Default exit sequence for state DoorOpen */
		stateVector[2] = State.$NULLSTATE$;
		stateConfVectorPosition = 2;
	}
	
	/* Default exit sequence for state DoorClose */
	private void exitSequence_Microwave_System_Door_DoorClose() {
		/* Default exit sequence for state DoorClose */
		stateVector[2] = State.$NULLSTATE$;
		stateConfVectorPosition = 2;
	}
	
	/* Default exit sequence for state Running */
	private void exitSequence_Microwave_System_Cooking_Running() {
		/* Default exit sequence for state Running */
		exitSequence_Microwave_System_Cooking_Running_r1();
		exitSequence_Microwave_System_Cooking_Running_r2();
	}
	
	/* Default exit sequence for state Cooking */
	private void exitSequence_Microwave_System_Cooking_Running_r1_Cooking() {
		/* Default exit sequence for state Cooking */
		stateVector[3] = State.$NULLSTATE$;
		stateConfVectorPosition = 3;
	}
	
	/* Default exit sequence for state CountDown */
	private void exitSequence_Microwave_System_Cooking_Running_r2_CountDown() {
		/* Default exit sequence for state CountDown */
		stateVector[4] = State.$NULLSTATE$;
		stateConfVectorPosition = 4;
		exitAction_Microwave_System_Cooking_Running_r2_CountDown();
	}
	
	/* Default exit sequence for state Finished */
	private void exitSequence_Microwave_System_Cooking_FinishState_r1_Finished() {
		/* Default exit sequence for state Finished */
		stateVector[3] = State.$NULLSTATE$;
		stateConfVectorPosition = 3;
	}
	
	/* Default exit sequence for state FinishSoundOn */
	private void exitSequence_Microwave_System_Cooking_FinishState_r2_FinishSoundOn() {
		/* Default exit sequence for state FinishSoundOn */
		stateVector[4] = State.$NULLSTATE$;
		stateConfVectorPosition = 4;
		exitAction_Microwave_System_Cooking_FinishState_r2_FinishSoundOn();
	}
	
	/* Default exit sequence for state FinishSoundOff */
	private void exitSequence_Microwave_System_Cooking_FinishState_r2_FinishSoundOff() {
		/* Default exit sequence for state FinishSoundOff */
		stateVector[4] = State.$NULLSTATE$;
		stateConfVectorPosition = 4;
	}
	
	/* Default exit sequence for state Waiting */
	private void exitSequence_Microwave_System_Cooking_Waiting() {
		/* Default exit sequence for state Waiting */
		stateVector[3] = State.$NULLSTATE$;
		stateConfVectorPosition = 3;
	}
	
	/* Default exit sequence for state StopState */
	private void exitSequence_Microwave_System_Cooking_StopState() {
		/* Default exit sequence for state StopState */
		stateVector[3] = State.$NULLSTATE$;
		stateConfVectorPosition = 3;
	}
	
	/* Default exit sequence for final state. */
	private void exitSequence_Microwave_System_Cooking__final_() {
		/* Default exit sequence for final state. */
		stateVector[3] = State.$NULLSTATE$;
		stateConfVectorPosition = 3;
	}
	
	/* Default exit sequence for state InitialCookingState */
	private void exitSequence_Microwave_System_Cooking_InitialCookingState() {
		/* Default exit sequence for state InitialCookingState */
		stateVector[3] = State.$NULLSTATE$;
		stateConfVectorPosition = 3;
	}
	
	/* Default exit sequence for region Microwave */
	private void exitSequence_Microwave() {
		/* Default exit sequence for region Microwave */
		switch (stateVector[0]) {
		case MICROWAVE_SYSTEM_SETTINGPOWER_HIGH:
			exitSequence_Microwave_System_SettingPower_High();
			break;
		case MICROWAVE_SYSTEM_SETTINGPOWER_LOW:
			exitSequence_Microwave_System_SettingPower_Low();
			break;
		default:
			break;
		}
		switch (stateVector[1]) {
		case MICROWAVE_SYSTEM_TIMERSETTING_TIMER_R1_FOURTHDIGIT:
			exitSequence_Microwave_System_TimerSetting_Timer_r1_fourthDigit();
			break;
		case MICROWAVE_SYSTEM_TIMERSETTING_TIMER_R1_THIRDDIGIT:
			exitSequence_Microwave_System_TimerSetting_Timer_r1_thirdDigit();
			break;
		case MICROWAVE_SYSTEM_TIMERSETTING_TIMER_R1_SECONDDIGIT:
			exitSequence_Microwave_System_TimerSetting_Timer_r1_secondDigit();
			break;
		case MICROWAVE_SYSTEM_TIMERSETTING_TIMER_R1_FIRSTDIGIT:
			exitSequence_Microwave_System_TimerSetting_Timer_r1_firstDigit();
			break;
		case MICROWAVE_SYSTEM_TIMERSETTING_TIMER_R1_INITIALTIME:
			exitSequence_Microwave_System_TimerSetting_Timer_r1_InitialTime();
			break;
		default:
			break;
		}
		switch (stateVector[2]) {
		case MICROWAVE_SYSTEM_DOOR_DOOROPEN:
			exitSequence_Microwave_System_Door_DoorOpen();
			break;
		case MICROWAVE_SYSTEM_DOOR_DOORCLOSE:
			exitSequence_Microwave_System_Door_DoorClose();
			break;
		default:
			break;
		}
		switch (stateVector[3]) {
		case MICROWAVE_SYSTEM_COOKING_RUNNING_R1_COOKING:
			exitSequence_Microwave_System_Cooking_Running_r1_Cooking();
			break;
		case MICROWAVE_SYSTEM_COOKING_FINISHSTATE_R1_FINISHED:
			exitSequence_Microwave_System_Cooking_FinishState_r1_Finished();
			break;
		case MICROWAVE_SYSTEM_COOKING_WAITING:
			exitSequence_Microwave_System_Cooking_Waiting();
			break;
		case MICROWAVE_SYSTEM_COOKING_STOPSTATE:
			exitSequence_Microwave_System_Cooking_StopState();
			break;
		case MICROWAVE_SYSTEM_COOKING__FINAL_:
			exitSequence_Microwave_System_Cooking__final_();
			break;
		case MICROWAVE_SYSTEM_COOKING_INITIALCOOKINGSTATE:
			exitSequence_Microwave_System_Cooking_InitialCookingState();
			break;
		default:
			break;
		}
		switch (stateVector[4]) {
		case MICROWAVE_SYSTEM_COOKING_RUNNING_R2_COUNTDOWN:
			exitSequence_Microwave_System_Cooking_Running_r2_CountDown();
			break;
		case MICROWAVE_SYSTEM_COOKING_FINISHSTATE_R2_FINISHSOUNDON:
			exitSequence_Microwave_System_Cooking_FinishState_r2_FinishSoundOn();
			break;
		case MICROWAVE_SYSTEM_COOKING_FINISHSTATE_R2_FINISHSOUNDOFF:
			exitSequence_Microwave_System_Cooking_FinishState_r2_FinishSoundOff();
			break;
		default:
			break;
		}
	}
	
	/* Default exit sequence for region r1 */
	private void exitSequence_Microwave_System_Cooking_Running_r1() {
		/* Default exit sequence for region r1 */
		switch (stateVector[3]) {
		case MICROWAVE_SYSTEM_COOKING_RUNNING_R1_COOKING:
			exitSequence_Microwave_System_Cooking_Running_r1_Cooking();
			break;
		default:
			break;
		}
	}
	
	/* Default exit sequence for region r2 */
	private void exitSequence_Microwave_System_Cooking_Running_r2() {
		/* Default exit sequence for region r2 */
		switch (stateVector[4]) {
		case MICROWAVE_SYSTEM_COOKING_RUNNING_R2_COUNTDOWN:
			exitSequence_Microwave_System_Cooking_Running_r2_CountDown();
			break;
		default:
			break;
		}
	}
	
	/* Default exit sequence for region r1 */
	private void exitSequence_Microwave_System_Cooking_FinishState_r1() {
		/* Default exit sequence for region r1 */
		switch (stateVector[3]) {
		case MICROWAVE_SYSTEM_COOKING_FINISHSTATE_R1_FINISHED:
			exitSequence_Microwave_System_Cooking_FinishState_r1_Finished();
			break;
		default:
			break;
		}
	}
	
	/* Default exit sequence for region r2 */
	private void exitSequence_Microwave_System_Cooking_FinishState_r2() {
		/* Default exit sequence for region r2 */
		switch (stateVector[4]) {
		case MICROWAVE_SYSTEM_COOKING_FINISHSTATE_R2_FINISHSOUNDON:
			exitSequence_Microwave_System_Cooking_FinishState_r2_FinishSoundOn();
			break;
		case MICROWAVE_SYSTEM_COOKING_FINISHSTATE_R2_FINISHSOUNDOFF:
			exitSequence_Microwave_System_Cooking_FinishState_r2_FinishSoundOff();
			break;
		default:
			break;
		}
	}
	
	/* Default react sequence for initial entry  */
	private void react_Microwave__entry_Default() {
		/* Default react sequence for initial entry  */
		enterSequence_Microwave_System_default();
	}
	
	/* Default react sequence for initial entry  */
	private void react_Microwave_System_SettingPower__entry_Default() {
		/* Default react sequence for initial entry  */
		enterSequence_Microwave_System_SettingPower_Low_default();
	}
	
	/* Default react sequence for initial entry  */
	private void react_Microwave_System_TimerSetting__entry_Default() {
		/* Default react sequence for initial entry  */
		enterSequence_Microwave_System_TimerSetting_Timer_default();
	}
	
	/* Default react sequence for initial entry  */
	private void react_Microwave_System_TimerSetting_Timer_r1__entry_Default() {
		/* Default react sequence for initial entry  */
		enterSequence_Microwave_System_TimerSetting_Timer_r1_InitialTime_default();
	}
	
	/* Default react sequence for initial entry  */
	private void react_Microwave_System_Door__entry_Default() {
		/* Default react sequence for initial entry  */
		enterSequence_Microwave_System_Door_DoorOpen_default();
	}
	
	/* Default react sequence for initial entry  */
	private void react_Microwave_System_Cooking_Running_r1__entry_Default() {
		/* Default react sequence for initial entry  */
		enterSequence_Microwave_System_Cooking_Running_r1_Cooking_default();
	}
	
	/* Default react sequence for initial entry  */
	private void react_Microwave_System_Cooking_Running_r2__entry_Default() {
		/* Default react sequence for initial entry  */
		enterSequence_Microwave_System_Cooking_Running_r2_CountDown_default();
	}
	
	/* Default react sequence for initial entry  */
	private void react_Microwave_System_Cooking__entry_Default() {
		/* Default react sequence for initial entry  */
		enterSequence_Microwave_System_Cooking_InitialCookingState_default();
	}
	
	/* Default react sequence for initial entry  */
	private void react_Microwave_System_Cooking_FinishState_r1__entry_Default() {
		/* Default react sequence for initial entry  */
		enterSequence_Microwave_System_Cooking_FinishState_r1_Finished_default();
	}
	
	/* Default react sequence for initial entry  */
	private void react_Microwave_System_Cooking_FinishState_r2__entry_Default() {
		/* Default react sequence for initial entry  */
		enterSequence_Microwave_System_Cooking_FinishState_r2_FinishSoundOn_default();
	}
	
	private long react(long transitioned_before) {
		/* State machine reactions. */
		return transitioned_before;
	}
	
	private long microwave_System_react(long transitioned_before) {
		/* The reactions of state System. */
		return react(transitioned_before);
	}
	
	private long microwave_System_SettingPower_High_react(long transitioned_before) {
		/* The reactions of state High. */
		long transitioned_after = microwave_System_react(transitioned_before);
		if (!(getDoCompletion())) {
			if (transitioned_after<0l) {
				if (low) {
					exitSequence_Microwave_System_SettingPower_High();
					enterSequence_Microwave_System_SettingPower_Low_default();
					transitioned_after = 0l;
				}
			}
		}
		return transitioned_after;
	}
	
	private long microwave_System_SettingPower_Low_react(long transitioned_before) {
		/* The reactions of state Low. */
		long transitioned_after = microwave_System_react(transitioned_before);
		if (!(getDoCompletion())) {
			if (transitioned_after<0l) {
				if (high) {
					exitSequence_Microwave_System_SettingPower_Low();
					enterSequence_Microwave_System_SettingPower_High_default();
					transitioned_after = 0l;
				}
			}
		}
		return transitioned_after;
	}
	
	private long microwave_System_TimerSetting_Timer_react(long transitioned_before) {
		/* The reactions of state Timer. */
		return transitioned_before;
	}
	
	private long microwave_System_TimerSetting_Timer_r1_fourthDigit_react(long transitioned_before) {
		/* The reactions of state fourthDigit. */
		long transitioned_after = microwave_System_TimerSetting_Timer_react(transitioned_before);
		if (!(getDoCompletion())) {
			if (transitioned_after<1l) {
				if (timer) {
					exitSequence_Microwave_System_TimerSetting_Timer_r1_fourthDigit();
					enterSequence_Microwave_System_TimerSetting_Timer_r1_InitialTime_default();
					transitioned_after = 1l;
				}
			}
		}
		return transitioned_after;
	}
	
	private long microwave_System_TimerSetting_Timer_r1_thirdDigit_react(long transitioned_before) {
		/* The reactions of state thirdDigit. */
		long transitioned_after = microwave_System_TimerSetting_Timer_react(transitioned_before);
		if (!(getDoCompletion())) {
			if (transitioned_after<1l) {
				if (digit) {
					exitSequence_Microwave_System_TimerSetting_Timer_r1_thirdDigit();
					enterSequence_Microwave_System_TimerSetting_Timer_r1_fourthDigit_default();
					transitioned_after = 1l;
				}
			}
		}
		return transitioned_after;
	}
	
	private long microwave_System_TimerSetting_Timer_r1_secondDigit_react(long transitioned_before) {
		/* The reactions of state secondDigit. */
		long transitioned_after = microwave_System_TimerSetting_Timer_react(transitioned_before);
		if (!(getDoCompletion())) {
			if (transitioned_after<1l) {
				if (digit) {
					exitSequence_Microwave_System_TimerSetting_Timer_r1_secondDigit();
					enterSequence_Microwave_System_TimerSetting_Timer_r1_thirdDigit_default();
					transitioned_after = 1l;
				}
			}
		}
		return transitioned_after;
	}
	
	private long microwave_System_TimerSetting_Timer_r1_firstDigit_react(long transitioned_before) {
		/* The reactions of state firstDigit. */
		long transitioned_after = microwave_System_TimerSetting_Timer_react(transitioned_before);
		if (!(getDoCompletion())) {
			if (transitioned_after<1l) {
				if (digit) {
					exitSequence_Microwave_System_TimerSetting_Timer_r1_firstDigit();
					enterSequence_Microwave_System_TimerSetting_Timer_r1_secondDigit_default();
					transitioned_after = 1l;
				}
			}
		}
		return transitioned_after;
	}
	
	private long microwave_System_TimerSetting_Timer_r1_InitialTime_react(long transitioned_before) {
		/* The reactions of state InitialTime. */
		long transitioned_after = microwave_System_TimerSetting_Timer_react(transitioned_before);
		if (!(getDoCompletion())) {
			if (transitioned_after<1l) {
				if (digit) {
					exitSequence_Microwave_System_TimerSetting_Timer_r1_InitialTime();
					enterSequence_Microwave_System_TimerSetting_Timer_r1_firstDigit_default();
					transitioned_after = 1l;
				}
			}
		}
		return transitioned_after;
	}
	
	private long microwave_System_Door_DoorOpen_react(long transitioned_before) {
		/* The reactions of state DoorOpen. */
		long transitioned_after = transitioned_before;
		if (!(getDoCompletion())) {
			if (transitioned_after<2l) {
				if (close) {
					exitSequence_Microwave_System_Door_DoorOpen();
					enterSequence_Microwave_System_Door_DoorClose_default();
					transitioned_after = 2l;
				}
			}
		}
		return transitioned_after;
	}
	
	private long microwave_System_Door_DoorClose_react(long transitioned_before) {
		/* The reactions of state DoorClose. */
		long transitioned_after = transitioned_before;
		if (!(getDoCompletion())) {
			if (transitioned_after<2l) {
				if (open) {
					exitSequence_Microwave_System_Door_DoorClose();
					enterSequence_Microwave_System_Door_DoorOpen_default();
					transitioned_after = 2l;
				}
			}
		}
		return transitioned_after;
	}
	
	private long microwave_System_Cooking_Running_react(long transitioned_before) {
		/* The reactions of state Running. */
		long transitioned_after = transitioned_before;
		if (!(getDoCompletion())) {
			if (transitioned_after<3l) {
				if (getSetTime()==0l) {
					exitSequence_Microwave_System_Cooking_Running();
					enterSequence_Microwave_System_Cooking_FinishState_default();
					transitioned_after = 4l;
				} else {
					if (open) {
						exitSequence_Microwave_System_Cooking_Running();
						enterSequence_Microwave_System_Cooking_Waiting_default();
						transitioned_after = 4l;
					} else {
						if (stop) {
							exitSequence_Microwave_System_Cooking_Running();
							enterSequence_Microwave_System_Cooking_StopState_default();
							transitioned_after = 4l;
						}
					}
				}
			}
		}
		return transitioned_after;
	}
	
	private long microwave_System_Cooking_Running_r1_Cooking_react(long transitioned_before) {
		/* The reactions of state Cooking. */
		return microwave_System_Cooking_Running_react(transitioned_before);
	}
	
	private long microwave_System_Cooking_Running_r2_CountDown_react(long transitioned_before) {
		/* The reactions of state CountDown. */
		long transitioned_after = transitioned_before;
		if (!(getDoCompletion())) {
			if (transitioned_after<4l) {
				if (((timeEvents[0]) && (getSetTime()>0l))) {
					exitSequence_Microwave_System_Cooking_Running_r2_CountDown();
					timeEvents[0] = false;
					enterSequence_Microwave_System_Cooking_Running_r2_CountDown_default();
					transitioned_after = 4l;
				}
			}
		}
		return transitioned_after;
	}
	
	private long microwave_System_Cooking_FinishState_react(long transitioned_before) {
		/* The reactions of state FinishState. */
		return transitioned_before;
	}
	
	private long microwave_System_Cooking_FinishState_r1_Finished_react(long transitioned_before) {
		/* The reactions of state Finished. */
		return microwave_System_Cooking_FinishState_react(transitioned_before);
	}
	
	private long microwave_System_Cooking_FinishState_r2_FinishSoundOn_react(long transitioned_before) {
		/* The reactions of state FinishSoundOn. */
		long transitioned_after = transitioned_before;
		if (!(getDoCompletion())) {
			if (transitioned_after<4l) {
				if (timeEvents[1]) {
					exitSequence_Microwave_System_Cooking_FinishState_r2_FinishSoundOn();
					timeEvents[1] = false;
					enterSequence_Microwave_System_Cooking_FinishState_r2_FinishSoundOff_default();
					transitioned_after = 4l;
				}
			}
		}
		return transitioned_after;
	}
	
	private long microwave_System_Cooking_FinishState_r2_FinishSoundOff_react(long transitioned_before) {
		/* The reactions of state FinishSoundOff. */
		long transitioned_after = transitioned_before;
		if (getDoCompletion()) {
			/* Default exit sequence for state FinishState */
			exitSequence_Microwave_System_Cooking_FinishState_r1();
			exitSequence_Microwave_System_Cooking_FinishState_r2();
			/* 'default' enter sequence for state StopState */
			entryAction_Microwave_System_Cooking_StopState();
			stateVector[3] = State.MICROWAVE_SYSTEM_COOKING_STOPSTATE;
			stateConfVectorPosition = 3;
		}
		return transitioned_after;
	}
	
	private long microwave_System_Cooking_Waiting_react(long transitioned_before) {
		/* The reactions of state Waiting. */
		long transitioned_after = transitioned_before;
		if (!(getDoCompletion())) {
			if (transitioned_after<3l) {
				if (close) {
					exitSequence_Microwave_System_Cooking_Waiting();
					enterSequence_Microwave_System_Cooking_Running_default();
					transitioned_after = 3l;
				}
			}
		}
		return transitioned_after;
	}
	
	private long microwave_System_Cooking_StopState_react(long transitioned_before) {
		/* The reactions of state StopState. */
		long transitioned_after = transitioned_before;
		if (getDoCompletion()) {
			/* Default exit sequence for state StopState */
			stateVector[3] = State.$NULLSTATE$;
			stateConfVectorPosition = 3;
			/* Default enter sequence for final state */
			stateVector[3] = State.MICROWAVE_SYSTEM_COOKING__FINAL_;
			stateConfVectorPosition = 3;
		}
		return transitioned_after;
	}
	
	private long microwave_System_Cooking__final__react(long transitioned_before) {
		/* The reactions of state null. */
		return transitioned_before;
	}
	
	private long microwave_System_Cooking_InitialCookingState_react(long transitioned_before) {
		/* The reactions of state InitialCookingState. */
		long transitioned_after = transitioned_before;
		if (!(getDoCompletion())) {
			if (transitioned_after<3l) {
				if (((start) && ((getSetTime()>0l && getIsDoorClosed()==true)))) {
					exitSequence_Microwave_System_Cooking_InitialCookingState();
					enterSequence_Microwave_System_Cooking_Running_default();
					transitioned_after = 3l;
				}
			}
		}
		return transitioned_after;
	}
	
	/* Can be used by the client code to trigger a run to completion step without raising an event. */
	public void triggerWithoutEvent() {
		runCycle();
	}
}
